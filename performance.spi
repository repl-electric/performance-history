load_support('piezoelectric_resonator'); use_bpm 127; alive perc: 1, pitch: 1, kick: 0
#overclock_cc sync: 127
#midi_cc 102, 127, channel: 5

at{
  sync :Attune
  sleep 8
#  flop_on :b2#,127
}

live_loop :Attune, sync: :unsyncable do; tick
  silence!
  zero_delay [2,5,6].shuffle
  with_bpm 127 do
    #tick_reset_all
    flop_cc motion: (flow 0.0 0.5 32).look

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0

    sleep 1/2.0
    sleep 1/2.0
    sleep 1/2.0

    flop :c4, 40, sus: (cycle 1/2.0).look if spread(1,1).look

    sleep 1/2.0
  end
end

live_loop :ClockCycle, sync: :unsyncable do; tick
  #sync :MachineInstructions
  perc=(cycle 0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0)
  with_bpm 127*(cycle 1).look do
    perc_machine perc.to_a
  end
end

live_loop :MachineInstructions, sync: :unsyncable do; tick
  with_bpm @bpm=(127*1) do
    score = (cycle
      [[:D2] 4]
      )
    chd = score.look[0]
    sleeps = score.look[-1]
    resonate chd[0],1, sus: sleeps, pads: [0], sat: 0, drive: 0
  #  glitch :d4,5, corrode: rand, mode: [0,1,2,3,4].choose
  #  glitch_cc mode: [0,1,2,3,4].choose

    sleep sleeps/2.0
#    overclock :e3, 10, sus: 1/8.0, motion: rand*0.5
    with_swing((flow 0.0 sleeps/2.0 64).look){
      resonate :a2,127, sus: sleeps*4, pads: [2], sat: 0, drive: 0.20
    }

    sleep sleeps/2.0

  end
end

live_loop(:unsyncable)do;sleep 1.0;end
