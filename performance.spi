load_support('piezoelectric_resonator'); use_bpm 127; alive perc: 0, pitch: 0, kick: 0


# world time: 1.00
# overclock_cc attune: 0.49, sync: 1

#cam :top

#recover
#sea circle: 0
live_loop :Attune, sync: :unsyncable do; tick
  silence?
  zero_delay [2,5,6].shuffle
  with_bpm @bpm=(127*1) do

    overclock :f4, sus: 4, motion: 0.3
    flop_cc motion: (flow 0.4 0.57 32).look
    flip_cc motion: 0.4

    fn = [(method :flop), (method :flip)].choose
    create_sea [0.2, -2].choose
    flip :g4, 65, sus: (cycle 0.25 0.5 1).look if spread(1,1).look
    fn.( :e4, 60, sus: (cycle 0.25 0.5 1).rot(-1).look) if spread(1,1).look

#    flop :b3, 60, sus: (cycle 2).look if !spread(7,11).look

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0

 #   flop :g3, 60, sus: (cycle 2).look if spread(7,11).look

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0

    flop :c4, 60, sus: (cycle 2).look if spread(3,8).look
    flop :e3, 60, sus: (cycle 2).look if spread(3,8).look

    sleep 1/2.0
    sleep 1/2.0
    sleep 1/2.0

    flop :c4, 127, sus: 1/2.0

    sleep 1/2.0
  end
end

live_loop :ClockCycle, sync: :unsyncable do; tick
  #sync :MachineInstructions
  perc=(cycle 1 1 1 1  1 1 1 1  1 1 1 1  0 0 0 0)
  with_bpm @bpm=(127*(cycle 1).look) do
    perc_machine perc.to_a
    #at{sleep 0.5 ; sea circle: rand; aura scale: rand*1.5}
  end
end

live_loop :MachineInstructions, sync: :unsyncable do; tick
  with_bpm @bpm=(127*1) do
    score = (cycle
      [[:A3 :C5 :E4] 8]
      [[:F4 :A6 :C5] 8]
      [[:C3 :E5 :G4] 4]
      [Zz 4]
      # [[:A3 :C5 :E4] 8]
      # [[:E4 :G5 :B3] 8]
      # [[:F4 :A6 :C5 :E5] 8]
      # [[:C3 :E5 :G4] 8]
      # [Zz 8]

      # [[:A3 :C5 :E4] 8]
      # [[:F4 :A6 :C5] 8]
      # [[:C3 :E5 :G4] 4]
      # [Zz 4]
      # [[:A3 :C5 :E4] 4]
      # [[:A3 :C5 :E4] 4]
      # [[:E4 :G5 :B3] 4]
      # [[:E4 :G5 :B3] 4]
      # [[:G4 :B6 :D5 :F4] 8]
      # [[:C4 :E5 :G4] 8]
      # [Zz 8]

      )
    #at{sleep 0.5; create_sea; sleep 0.5; cam :chase}
    chd = score.look[0]
    sleeps = score.look[-1]
    resonate chd[0]+12,1, sus: sleeps, pads: [0], sat: 0, drive: 0

    control_unit root(chd), 10,sus: sleeps, drive: 0.0, sat: 0.0


    sleep sleeps/2.0

    # with_swing((flow 0.0 sleeps/2.0 64).look){
    #   overclock :f4,12, sus: 1/2.0, motion: rand*0.5
    #   resonate :f2,110, sus: sleeps*2, pads: [2], sat: 0, drive: 0.60
    # }

    sleep sleeps/2.0
  end
end

live_loop(:unsyncable)do;sleep 1.0;end
