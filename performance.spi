load_support('piezoelectric_resonator'); use_bpm 127
alive perc: 1, sop: 0
#start_init
#scene 1
#init! true
#overclock_cc motion: 0.21
#zoomout
#at{
#  sync :unsyncable
 # overclock_on :f3
#}
#slow_init

#init! true
#overclock_cc motion: 0.26
#zoomout

#slow_init

#roots_chase amp: 0.1, drag: 5
live_loop :ModularSynthsControlledByCode, sync: :unsyncable do; tick
  zero_delay [2,5,6].shuffle
  with_bpm 127 do

    flip :c3, 100, sus: 2 if spread(2,3).rot(1)
    flip :e3, 50, sus: 2 if spread(3,9).rot(1)


    sleep 1/4.0
    sleep 1/4.0
    sleep 1/2.0

    ze (ing :a3, :e4, :g4,).look, 10, z: 1, viz: true if spread(7,11).look
    ze (nit :a3, 4,  :e3, 4, :g3, 4,  :a3, 4,  :e3, 4, :c4, 4,).look, 5 if spread(3,8).look

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0

    sleep 1/2.0
    sleep 1/2.0

    if spread(3,9).look
      flop :c4
    else
    end

    sleep 1/2.0
    sleep 1/2.0
  end
end

live_loop :glitch, sync: :unsyncable do; tick
  #sync :light
  perc=[1, 1, 0, 0,  0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0]
  with_bpm 127*(ing 1,).look do
    perc_machine perc
  end
end

#create_sea
#roots_chase force: 20, freq: 0.2, thick: 0.2, noise: 1,amp: 0.3, drag: 2
live_loop :light, sync: :unsyncable do; tick
  with_bpm 127*1 do
    score = (ing
      [[:A3, :C3], 8],
      [[:F3, :a3], 8],
      [[:C3, :e3], 8],
      )
    chd = score.look[0]
    sleeps = score.look[-1]
    heat chd[0], 1, sus: sleeps
    deep root(chd), 126, tube: 0.3
    sleep sleeps
  end
end

live_loop(:unsyncable) do;  sleep 1.0;end
