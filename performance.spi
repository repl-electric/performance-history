load_support('piezoelectric_resonator'); use_bpm 127
alive perc: 1, sop: 0

#flop_on :d2, 127


#eject_cpu_core
fx erverb: 1

#zoomout
overclock_cc motion: 0.52, drive: 1.00


live_loop :Attune, sync: :unsyncable do; tick
  silence?
  zero_delay [2,5,6].shuffle
  with_bpm 127 *4 do
    flop_cc motion: (flow 0.5 0.57 32).look, drive: 1.00
    flip_cc motion: 0.6, drive: 1.00
    kal :c4, 4
    flip :e4, 127, sus: (cycle 1 0.5 0.25).look
    flop :g4, 127, sus: (cycle 2 0.5 0.25).rot(1).look
    kal :a4, 127, sus: (cycle 4 0.5 0.25).rot(1).look

    rocks orbit: 100
    roots_chase freq: rand*2, amp: 0.45


    sleep 1/4.0
    sleep 1/4.0
    sleep 1/2.0

    alu (cycle :g3 :e3 :a3).look if spread(7,11).look
    alu (cycle :g3 :a3 :e3).look if spread(3,8).look

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0

    sleep 1/2.0
    sleep 1/2.0

    sleep 1/2.0
    sleep 1/2.0
  end
end

live_loop :ClockCycle, sync: :unsyncable do; tick
  #sync :MachineInstructions
  perc=(cycle 1 1 1 1  1 1 1 1  1 1 1 1 1 1 1 1 1)
  with_bpm 127*(cycle 2).look do
    perc_machine perc.to_a
    dark :C3

    sea circle: rand
  end
end

create_sea

#roots_chase force: 20, freq: 0.2, thick: 0.2, noise: 1,amp: 0.3, drag: 2

live_loop :MachineInstructions, sync: :unsyncable do; tick
  with_bpm 127*1 do
    score = (cycle
      [[:A3 :C5 :E4] 8]
      [[:F4 :A6 :C5] 8]
      [[:C3 :E5 :G4] 4]
      [Zz 4]
      [[:A3 :C5 :E4] 8]
      [[:E4 :G5 :B3] 8]
      [[:F4 :A6 :C5 :E5] 8]
      [[:C3 :E5 :G4] 8]
      [Zz 8]

      [[:A3 :C5 :E4] 8]
      [[:F4 :A6 :C5] 8]
      [[:C3 :E5 :G4] 4]
      [Zz 4]
      [[:A3 :C5 :E4] 4]
      [[:A3 :C5 :E4] 4]
      [[:E4 :G5 :B3] 4]
      [[:E4 :G5 :B3] 4]
      [[:G4 :B6 :D5 :F4] 8]
      [[:C4 :E5 :G4] 8]
      [Zz 8]

      )
    chd = score.look[0]
    sleeps = score.look[-1]
    resonate chd,1, sus: sleeps, pads: [0,1,2], sat: 0, drive: 0

    control_unit root(chd),1, sus: sleeps, sat: 1, drive: 1

    voltage :e4,127, sus: 1
    sleep sleeps/2.0
    with_swing 0.1 {
      operator score[-1], 125, sus: 12
      #alu :a2, z: 1
    }

    with_swing((flow 0.0 2.0 32).look){
      operator score[-1], 120, sus: 12
    }

    midi chd.choose,  channel: 3, sus: 6 if spread(1,4).look
    sleep sleeps/2.0
  end
end

live_loop(:unsyncable)do;sleep 1.0;end
