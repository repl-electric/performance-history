load_support('t3'); use_bpm 160.0

W=1.0
H=1/2.0
Q=1/4.0
E=1/8.0

RW=[_, 1.0]
RH=[_, 1/2.0]
RQ=[_, 1/4.0]
RE=[_,1/8.0]

live_loop :intro, sync: :unsyncable do
  #stop
  tick
  score = (ing
    [:C3 H] RH [:Cs3 H] RH [:Eb3 H] RQ [:E3 H] RQ [:F3 W]                  [_ W*1]
    [:C3 H] RH [:Cs3 H] RH [:Eb3 H] RQ [:E3 H] RQ [:F3 W]                  [_ W*1]

    [:C3 H] RH [:Cs3 H] RH [:Eb3 H] RQ [:E3 H] RH [:Eb3 Q] RQ [:cs3 Q]     [_ W*1]
    [:C3 H] RH [:Cs3 H] RH [:Eb3 H] RQ [:E3 H] RH [:Eb3  Q] RQ [:cs3 Q]    [_ W*1]

    [:C3 H] RH [:Cs3 H] RH [:Eb3 H] RQ [:E3 H] RH [:Eb3 Q] RQ [:ab3 Q]     [_ W*1]
    [:C3 H] RH [:Cs3 H] RH [:Eb3 H] RQ [:E3 H] RH [:Eb3 Q] RQ [:ab3 Q]     [_ W*1]

    [:C3 H] RH [:Cs3 H] RH [:Eb3 H] RQ [:E3 H] RH [:G3 Q] RQ [:d4 Q]       [_ W*1]
    [:Ab4 H] RQ [:F4 H] RQ [:G4 H] RQ [:D4 H] RQ [:Eb4 Q] RQ [:c4 6]       [_ 0]

    [:EOS 0]
    )
  s = score.look
  #midi (ing :c2 :eb2).tick(:in), 10, sus: score.reduce(0){|a,s|a+=s[-1]}/2, channel: 15 if spread(1,score.length/2.0).look
  if score.look(offset: 1)[0] == :EOS
    creature :Eb4,127, sus: 4
    #stop
    #s[0] = _
  end
  puts score.reduce(0){|a,s|a+=s[-1]}

  with_transpose -12{
    midi s[0], 100,  sus: s[-1]+0.2, channel: 7
  }
  with_swing(-0.1){
    midi s[0], 127,  channel: 14, sus: s[-1]+ (dice > 4 ? 0.0 : 0.5)
  }
  sleep s[-1]
end
live_loop :unsyncable do; sleep 1;end
stop
live_loop :kicker, sync: :unsyncable do
  tick
  with_bpm (160.0*(ing 1 1 2 0.5).look) {
  #creature_cc dirt: rand*0.1, filter: rand*0.1, talk: rand*0.1
  #creature :eb4,100, sus:4*2 if spread(1,4).look
  #with_bpm (160.0*[0.25,0.25,0.5,0.5].choose) {
    midi (ing :ds3).look, (line 80, 120,1024).look, port: :iac_bus_1, channel:13 if spread(1,16).look
    if spread(1,32).look
      at{sleep 1/4.0
        midi (ing :ds3).look, (line 80, 120,1024).look, port: :iac_bus_1, channel:13
      }
    end
    if true#dice(8) > 3
      midi (ing :c3 :d3).look, (line 80, 120,1024).look, port: :iac_bus_1, channel:8
    else
      midi (ing :f3).look, (line 80, 120,1024).look, port: :iac_bus_1, channel:8
    end
    sleep 1/2.0
  }
end

live_loop :creatures, sync: :unsyncable do
  tick
  @run||=false
  with_bpm (160*[2,2,2].choose) {
    midi :eb4,  channel: 7 if spread(1,1).look if @run
    midi :c4,  channel: 7  if spread(1,8).look unless @run
    @run=false if spread(1,64).rot(32+8).look
    @run=true if spread(1,64).rot(-6).look
    if spread(1,64).look
      #creature_cc dirt: rand*1.0, filter: rand*1.0, talk: rand*1.0
      shudder_fx (ing :cs3).tick(:in)
      creature :eb4, (ine 40 100 128).look, sus:8
#      at{
#        sleep 8.0
#        midi (ing :ds4, :e4).look, 80, channel: 11
#      }
    end
  midi (ing :ds4 :e4 :cs4 :ds4).look,  (ing 20 35 5).look, channel: 12                  if spread(7,9*1).look
  bows (knit :e4, 8,  _,8, :eb4, 8).look, (line 50, 120,32).look, sus: 1.0/4.0 if spread(7,9*1).rot(-2).look
  bows (knit :bb4, 8, _,8, :b4, 8).look, 40, sus: 1.0/8.0                     if spread(3,7*1).rot(-1).look

  midi (ing :ds4, :e4).look,55, channel: 11 if spread(1,32).look
  sleep 1.0
  }
end


#C♯, D♯, E, F♯, G♯, A, and B

live_loop :melo, sync: :unsyncable do
#  stop
  midi :bb4, sus: W*(ing 1 1 2 4).look, channel: 3
  midi 'c1',(ing 127 0).look, channel: 3
  at{sleep 1.0; shudder_fx (ing :e3).look} if spread(1,2).rot(-1).look

  with_bpm 160*0.125 {
  tick
  #creature_x; arp_x
  #zero_cc delay_note: (knit :c3, 2, :eb3, 2, :g3, 2).look
  pos = [1,5,3].shuffle
  #zero_cc ldelay: pos[0],cdelay: pos[1], rdelay: pos[2]
  score = (ing
    [:C2  100  W] RW
    [:C2  120  W] RW
    [:Eb2 100  W] RW
    [:C2  100  W] RW

    [:C2   100  W] RW
    [:C2   120  W] RW
    [:Eb3  100  W] RW
    [:Cs2  100  W] RW
    )
  s = score.look

  with_transpose 12*2{
    midi s[0], 127, sus: 4, channel: 14 if spread(1,2).look
  }
  midi s[0], 10, sus: s[-1]*score.length, channel: 15 if spread(1,score.length).look
  midi_cc 19, (line 1, 40, score.length).look, channel: 7 if spread(1,4).look

  with_swing((line 0, -0.08,64).look){
    midi_cc 51, (line 0, 127, score.length).look, channel: 7
    midi s[0], s[1], port: :iac_bus_1, channel:7, sus: s[-1] + 0.2
  }
    sleep s[-1]
  }
end
