load_support('piezoelectric_resonator'); use_bpm 127; alive perc: 0, pitch: 1, kick: 0

at{
  sync :Attune
  sleep 4
#  flop_on :b2, 120#, sus: (cycle 1).look if spread(1,1).look
}

live_loop :Attune, sync: :unsyncable do; tick
  zero_delay [2,5,6].shuffle
  with_bpm 127 do
    flop_cc motion: (flow 0.0 0.5 32).look

    flop :a3, sus: (cycle 0.25 0.5 1).look
    flop :e3, sus: (cycle 0.25 0.5 1).rot(-1).look

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0

    sleep 1/2.0
    sleep 1/2.0
    sleep 1/2.0

    flop :c4, sus: 1/2.0

    sleep 1/2.0
  end
end

live_loop :ClockCycle, sync: :unsyncable do; tick
  #sync :MachineInstructions
  perc=(cycle 0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0)
  with_bpm 127*(cycle 1).look do
    perc_machine perc.to_a
  end
end

live_loop :MachineInstructions, sync: :unsyncable do; tick
  with_bpm @bpm=(127*1) do
    score = (cycle
      [[:g2] 4]
      )
    chd = score.look[0]
    sleeps = score.look[-1]
    resonate chd[0]+12,1, sus: sleeps, pads: [0], sat: 0, drive: 0
    #create_aura
    sleep sleeps/2.0

    with_swing((flow 0.0 sleeps/2.0 64).look){
      resonate :f1,127, sus: sleeps*4, pads: [2], sat: 0, drive: 0
      voltage chd[0],0
    }


    sleep sleeps/2.0
  end
end

live_loop(:unsyncable)do;sleep 1.0;end
