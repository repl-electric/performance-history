load_support('piezoelectric_resonator'); use_bpm 127
alive perc: 0, sop: 0
#init! true
#create_aura

#flop_on :D2
#resonate :a2
#create_aura
#unity "/cube/aura/scalemul", -0.6
# unity "/cube/aura/wave", 1.0
# unity "/cube/aura/height", 1.0
# unity "/cube/aura/waveheight", 10.0
# unity "/cube/aura/globalscale", 0.0
# unity "/cube/aura/fresnel", 1.4
# unity "/cube/aura/ripple", 1.4
# unity "/cube/aura/scalemul", -0.6
puts :yes

live_loop :Attune, sync: :unsyncable do; tick
  zero_delay [2,5,6].shuffle
  with_bpm 127 do
    flop_cc motion: (flow 0.27, 0.5, 32,).look


    sleep 1/4.0
    sleep 1/4.0
    sleep 1/2.0

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0

    sleep 1/2.0
    sleep 1/2.0

    sleep 1/2.0
    sleep 1/2.0
  end
end

live_loop :ClockCycle, sync: :unsyncable do; tick
  #sync :MachineInstructions
  perc=(cycle 0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,)
  with_bpm 127*(cycle 1,).look do
    perc_machine perc.to_a
  end
end

#roots_chase force: 20, freq: 0.2, thick: 0.2, noise: 1,amp: 0.3, drag: 2
live_loop :MachineInstructions, sync: :unsyncable do; tick
  with_bpm 127*1 do
    score = (cycle
      [[:A2], 8],

      )
    chd = score.look[0]
    sleeps = score.look[-1]
    resonate chd,1, sus: sleeps, pads: [0], sat: 0, drive: 0

    sleep sleeps
  end
end

live_loop(:unsyncable)do;sleep 1.0;end
