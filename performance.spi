load_support('piezoelectric_resonator'); use_bpm 127
alive perc: 1, sop: 0
#init! true
#stop
#start_init
#flop_on :d2, 127
live_loop :name do
burst 0
#zoomout
colorb 0.9, force: 1
#slow_init
#livecode :sleep
roots_chase throttle: 0
#fx drive: 1.00, reverb: 1.00
star size: 0
#cam :side
world time: 1
cam :chase
#create_cube
#zoomout
  tick
  flop_cc motion: (flow 0.27 0.5 12).look
  operator :C3, 98, sus: 2

  sleep 1
  x= (vec
    :B3 :B3 :A3 _     :C4 :B3 :B3 _    :B3 :B3 :B3 _
    :C4 :C4 :C4 _    :F4 :E4 :E4 _    :E4 :E4 :G4  _)
  flop x.look, 120
  sleep 1/2.0
  operator :F4, 95, sus: 4 if spread(3,8*4).look
  operator :G3, 98, sus: 2 if spread(3,8).look
  sleep 1/2.0/2.0
  operator :E5, 98, sus: 2 if spread(1, x.count).look
  sleep 1/2.0/2.0

end

  stop
stop

live_loop :ModularSynthsControlledByCode, sync: :unsyncable do; tick
  zero_delay [2,5,6].shuffle
  with_bpm 127 * 4 do
#    overclock_cc motion: 1.00
 #   flop_cc motion: 1.00
#    star life: 7
  #  kal :e4,5, sus: 4
    #flop_cc motion: (flow 0.27 0.5 12).look
   # flip :f4, 127, sus: (vec 1 0.5 2).look if spread(1,3).look
    #flip :e3, 127, sus: (vec 1 0.5 2).look if spread(1,3).rot(-1).look

    if spread(7,11).look
    #  flop :g3, sus: 4
    end

    roots_chase freq: rand*2, amp: 0.2, force: 100
    #roots_chase target: :start

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/2.0
#    burst 1

    if spread(3,8).look
    #  vortex force: (vec 10.2 0).look
    end
    #alu (vec :c4 :e4).look, (vec 1,60,127).look, sus: (vec 0.5 0.25 2).look if spread(3,8).look
    #alu (knit :a4,4).look,(vec 127,127,1).look,z:1, sus: (vec 8 8 8).look if spread(7,11).look
    #create_cube

    if spread(7,11).look
    else
   #   flop :a3, sus: 4
    end

    sleep 1/4.0
    sleep 1/4.0

    #flop :f3

    sleep 1/4.0
    sleep 1/4.0

    if spread(3,8).look
      #flop_cc motion: 0.4
    #  flop :c4,120, sus: 2
    else
      #flop_cc motion: 0.3
     # flop :e3,100, sus: 2
    end


    sleep 1/2.0
    sleep 1/2.0

    flop :c4,120, sus: 1/2.0

    sleep 1/2.0
    sleep 1/2.0
  end
end
#roots_chase target: :ring
live_loop :glitch, sync: :unsyncable do; tick
  #sync :light
  perc=(vec 1 1 1 1  1 1 1 1  1 1 1 1  1 1 1 1)
  with_bpm 127*(vec 2).look do
    perc_machine perc.to_a
    at{
      sleep 0.5
      sea circle: rand
      }
  end
end

#roots_chase drag: 4, force: 100

#roots_chase target: :spiral

#create_sea
#roots_chase force: 20, freq: 0.2, thick: 0.2, noise: 1,amp: 0.3, drag: 2
live_loop :light, sync: :unsyncable do; tick
  with_bpm 127*2 do
    score = (vec
      [[:A3 :C5 :E4] 8]
      [[:F4 :A6 :C5] 8]
      [[:C3 :E5 :G4] 4]
      [Zz 4]
      [[:A3 :C5 :E4] 8]
      [[:E4 :G5 :B3] 8]
      [[:F4 :A6 :C5 :E5] 8]
      [[:C3 :E5 :G4] 8]
      [Zz 8]

      [[:A3 :C5 :E4] 8]
      [[:F4 :A6 :C5] 8]
      [[:C3 :E5 :G4] 4]
      [Zz 4]
      [[:A3 :C5 :E4] 4]
      [[:A3 :C5 :E4] 4]
      [[:E4 :G5 :B3] 4]
      [[:E4 :G5 :B3] 4]
      [[:G4 :B6 :D5 :F4] 8]
      [[:C4 :E5 :G4] 8]
      [Zz 8]

      )
    chd = score.look[0]
    sleeps = score.look[-1]
    heat chd,10, sus: sleeps, pads: [0], sat: 1.00, drive: 1.00

    sleep sleeps/2.0
    with_swing 0.1 {
      #operator chd[-1],127, sus: 4
    }
    operator chd[-2],127, sus: 4
    deep root(chd), 127,sus: sleeps, drive: 1.00, sat: 1.00, tube: 1.00

    sleep sleeps/2.0
  end
end

live_loop(:unsyncable) do;  sleep 1.0;end
