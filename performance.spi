load_support('piezoelectric_resonator'); use_bpm 127
alive perc: 0, sop: 0


#flop_on :D3, 100

at{
  #sync :unsyncable
  #sleep 1/6.0
#  overclock_on :E3
 # say :sleep
}

#overclock_cc motion: 0.27

live_loop :ModularSynthsControlledByCode, sync: :unsyncable do; tick
  zero_delay [2,5,6].shuffle
  with_bpm 127 do
    flop_cc motion: 0.2

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/2.0

    if spread(7,11).look
      ze (vec :g2, :a2, :f2,).look, z: 1
    end
    if spread(3,8).look
      ze (nit :g3, 4, :a3, 4, :F3, 4, :g3, 4, :a3, 4, :A4, 4,).look
    end


    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0

    sleep 1/2.0
    sleep 1/2.0

    sleep 1/2.0
    sleep 1/2.0
  end
end

live_loop :glitch, sync: :unsyncable do; tick
  #sync :light
  perc=[0, 0, 0, 0,  0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0]
  with_bpm 127*(vec 1,).look do
    perc_machine perc
  end
end


#roots_chase force: 20, freq: 0.2, thick: 0.2, noise: 1,amp: 0.3, drag: 2
live_loop :light, sync: :unsyncable do; tick
  with_bpm 127*1 do
    score = (vec
      [[:G3], 8],
      [[:A3], 8],
      [[:C3], 8],

      )
    chd = score.look[0]
    sleeps = score.look[-1]
    heat chd,18, sus: sleeps, pads: [0]

    sleep sleeps
  end
end

live_loop(:unsyncable) do;  sleep 1.0;end
