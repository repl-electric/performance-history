load_support('piezoelectric_resonator'); use_bpm 127
alive perc: 1, sop: 0




#start_init
#scene 1
#init! true
#overclock_cc motion: 0.21
#zoomout
#at{
#  sync :unsyncable
 # overclock_on :f3
#}
#slow_init

#init! true
#overclock_cc motion: 0.26
#zoomout





#slow_init
#flop_cc drive: 0.35
#roots_chase amp: 0.1, drag: 5
live_loop :ModularSynthsControlledByCode, sync: :unsyncable do; tick
  zero_delay [2,5,6].shuffle
  with_bpm 127*2 do
    kal :e4, sus: 1

    # flip :c3, 100, sus: 2 if spread(2,3).rot(1)
    # flip :e3, 50, sus: 2 if spread(3,9).rot(1)


    if spread(7,11).look
      flip :F3, sus: 1
    else

    end
    rocks orbit: 100
    sleep 1/4.0
    if spread(1,12).look
#      flop(:e4,80, sus: 1)
#      ze :d4, sus: 12

    end

    sleep 1/4.0

 #   flop(:e4,30, sus: 2)

    sleep 1/2.0

  #  ze (ing :a3, :e4, :g4,).look, 10, z: 1, viz: true if spread(7,11).look
  #  ze (nit :a3, 4,  :e3, 4, :g3, 4,  :a3, 4,  :e3, 4, :c4, 4,).look, 5 if spread(3,8).look

    sleep 1/4.0
    sleep 1/4.0

    #flip :f3,60, sus: 2

    sleep 1/4.0
    sleep 1/4.0

    sleep 1/2.0
    sleep 1/2.0

    if spread(3,8).look
      flop_cc motion: 0.3
    #  flop :c4,110, sus: 2
    else
      flop_cc motion: 0.4
    #  flop :e3,50, sus: 2
    end

    sleep 1/2.0

    flop :c4, sus: 1/2.0

    sleep 1/2.0
  end
end

live_loop :glitch, sync: :unsyncable do; tick
  #sync :light
  perc=[1, 1, 0, 0,  0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0]
  with_bpm 127*(ing 1, 0.5, 1, 0.5, 2,).look do
    perc_machine perc
  end
end

#create_sea

live_loop :light, sync: :unsyncable do; tick
  roots_chase force: 20, freq: 0.2, thick: 0.2, noise: 1,amp: 0.3, drag: 2
  with_bpm 127*1 do
    score = (ing
      [[:A3, :C5, :E4], 8],
      [[:F4, :A6, :C5], 8],
      [[:C3, :E5, :G4], 4],
      [Zz, 4],
      [[:A3, :C5, :E4], 8],
      [[:E4, :G5, :B3], 8],
      [[:F4, :A6, :C5, :E5], 8],
      [[:C3, :E5, :G4], 8],
      [Zz, 8],

      [[:A3, :C5, :E4], 8],
      [[:F4, :A6, :C5], 8],
      [[:C3, :E5, :G4], 4],
      [Zz, 4],
      [[:A3, :C5, :E4], 4],
      [[:A3, :C5, :E4], 4],
      [[:E4, :G5, :B3], 4],
      [[:E4, :G5, :B3], 4],
      [[:G4, :B6, :D5, :F4], 8],
      [[:C4, :E5, :G4], 8],
      [Zz, 8],
      )
    chd = score.look[0]
    sleeps = score.look[-1]
    heat chd[0]+12, 120, sus: sleeps*1, pads: [0,1,2,3]
#    deep root(chd), 127, drive: 0.00, sat: 1.00, sus: sleeps*2

    sleep sleeps
  end
end

sea wave: 29, ripple: 12


live_loop(:unsyncable) do;  sleep 1.0;end
