load_support('piezoelectric_resonator'); use_bpm 127
alive perc: 1, sop: 0

#flop_on :d2

live_loop :Attune, sync: :unsyncable do; tick
  zero_delay [2,5,6].shuffle
  with_bpm 127 do
    flop_cc motion: (flow 0.27, 0.57, 32,).look
    flop :A3,120, sus: (cycle 1, 0.5, 0.25,).look
    with_swing 0.1 {
      flop :E3,100, sus: (cycle 1, 0.5, 0.25,).rot(-1).look
    }

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/2.0

    alu (cycle :a3,).look,(cycle 1, 5,).look, sus: 2 if spread(7,11).look
    alu (cycle :g4,).look,127, sus:4 if spread(3,8).look

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0

    sleep 1/2.0
    sleep 1/2.0

    sleep 1/2.0
    sleep 1/2.0
  end
end

live_loop :ClockCycle, sync: :unsyncable do; tick
  #sync :MachineInstructions
  perc=(cycle 1, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,)
  with_bpm 127*(cycle 1,).look do
    perc_machine perc.to_a
  end
end

#roots_chase force: 20, freq: 0.2, thick: 0.2, noise: 1,amp: 0.3, drag: 2
live_loop :MachineInstructions, sync: :unsyncable do; tick
  with_bpm 127*1 do
    score = (cycle
      [[:A2, :C4, :E3], 8],
      [[:A2, :E4,  :E3], 8],
      )
    chd = score.look[0]
    sleeps = score.look[-1]
    resonate chd,1, sus: sleeps, pads: [0], sat: 0, drive: 0
    #control_unit root(chd),1,sus: sleeps, drive: 0.00, sat: 0.00
    sleep sleeps/2.0
    operator chd[-1], 95, sus: 6
    with_swing((flow 0.0, 4, 32,).look){
      operator chd[-2], 89+20, sus: 6
      qbitsea :e4,120, sus: 12
    }


    sleep sleeps/2.0
  end
end

live_loop(:unsyncable)do;sleep 1.0;end
