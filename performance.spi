load_support('piezoelectric_resonator'); use_bpm 127
alive perc: 0, sop: 0
#init! true
#start_init

#flop_on :d3, 127


live_loop :ModularSynthsControlledByCode, sync: :unsyncable do; tick
  zero_delay [2,5,6].shuffle
  with_bpm 127 do
    flop_cc motion: (flow 0.2 0.6 32).look

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/2.0

    # A F C

    if spread(8,11).look
      ze x=(vec :g4 :a4 :e4).tick(:in), z: 1, sus: (vec 2 4).look, star: true
      puts "ZE: #{x}"
    end
    ze x=(vec :f3 :a3).tick(:in),127, z: 1, sus: 1.0

    if spread(3,8).look
      #ze (nit :g3 4 :A3 4 :e3 4 :g3 4 :A3 4 :c4 4).look, sus: 4, y: 1
      #puts "ZE: #{(nit :g3 4 :A3 4 :e3 4 :g3 4 :A3 4 :c4 4).look}"
    end

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0

    sleep 1/2.0
    sleep 1/2.0

    sleep 1/2.0
    sleep 1/2.0
  end
end

live_loop :glitch, sync: :unsyncable do; tick
  #sync :light
  perc=[0, 0, 0, 0,  0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0]
  with_bpm 127*(vec 1).look do
    perc_machine perc
  end
end


#roots_chase force: 20, freq: 0.2, thick: 0.2, noise: 1,amp: 0.3, drag: 2
live_loop :light, sync: :unsyncable do; tick
  with_bpm 127*1 do
    score = (vec
      [[:A3 :C5 :E4] 8]
      [[:F4 :A6 :C5] 8]
      [[:B3 :E5 :G4] 4]
      [Zz 4]

      )
    chd = score.look[0]
    sleeps = score.look[-1]
    #heat chd,1, sus: sleeps, pads: [0]
    puts "HEAT: #{chd[0]}"
    midi chd[0],80, channel: 16,sus: sleeps
    sleep sleeps
  end
end

live_loop(:unsyncable) do;  sleep 1.0;end
