load_support('piezoelectric_resonator'); use_bpm 127; alive perc: 0

live_loop :Attune, sync: :unsyncable do; tick
  zero_delay [2,5,6].shuffle
  with_bpm 127 do
    flop_cc motion: (flow 0.27 0.5 32).look
    flop :a3, 127, sus: (cycle 1 0.5 2).look

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0


    alu (cycle :g3).look, z: 1 if spread(7,11).look
    alu (cycle_rep :g3 4 :e3 4 :a3 4).look, z: 1, sus: (cycle 1 2).look if spread(7,11).look

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0

    sleep 1/2.0
    sleep 1/2.0
    sleep 1/2.0
    sleep 1/2.0
  end
end

live_loop :ClockCycle, sync: :unsyncable do; tick
  #sync :MachineInstructions
  perc=(cycle 0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0)
  with_bpm 127*(cycle 1).look do
    perc_machine perc.to_a
  end
end

live_loop :MachineInstructions, sync: :unsyncable do; tick
  with_bpm 127*1 do
    score = (cycle
      [[:a2 :c3] 8]
      [[:e2 :g3] 8]
      [[:c2 :e3] 4]
      )
    chd = score.look[0]
    sleeps = score.look[-1]
    resonate chd,1, sus: sleeps, pads: [0], sat: 0, drive: 0


    voltage :f4

    sleep sleeps/2.0
    operator chd[-2], 90, sus: 12
    with_swing((flow 0.0 2.0 32).look){
      operator chd[-1], 90, sus: 12
    }

    sleep sleeps/2.0
  end
end

live_loop(:unsyncable)do;sleep 1.0;end
