#Repl Electric: http://www.repl-electric.com
load_support('piezoelectric_resonator'); use_bpm 127; alive perc: 0, pitch: 1, kick: 0
#init true && start_init

at{
  sync :Attune
  sleep 1/4.0
  overclock_on :E3, motion: 0.40
}

#livecode :begin

live_loop :Attune, sync: :unsyncable do; tick
  silence! # please
  zero_delay [2,5,6].shuffle
  with_bpm @bpm=(127) do
    #tick_reset_all
    flop_cc motion: (flow 0.0 0.57 32).look

#    flop :c4, 127, sus: (cycle 1/2.0).look

    flop :a3,100, sus: (cycle 0.25 0.5 1).look
    flop :e3,100-rand*10, sus: (cycle 0.25 0.5 1).rot(-1).look

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0

    flop :e3, sus: 0.5

    sleep 1/2.0
    sleep 1/2.0
    sleep 1/2.0

    flop :c4, 127, sus: (cycle 1/2.0).look

    sleep 1/2.0
  end
end

live_loop :ClockCycle, sync: :unsyncable do; tick
  #sync :MachineInstructions
  perc=(cycle 0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0)
  with_bpm @bpm=(127*(cycle 1).look) do
    perc_machine perc.to_a
  end
end

live_loop :MachineInstructions, sync: :unsyncable do; tick
  with_bpm @bpm=(127*1) do
    score = (cycle
      [[:F2] 8]
      )
    chd = score.look[0]
    sleeps = score.look[-1]

    resonate chd[0]+12,1, sus: sleeps, pads: [0], sat: 0, drive: 0

    sleep sleeps/2.0

    with_swing((flow 0.0 sleeps/2.0 64).look){
     # overclock :f4,35, sus: 1/4.0, motion: rand*0.5
     # resonate :g2,127, sus: sleeps, pads: [2], sat: 0, drive: 0.72
    }


    sleep sleeps/2.0
  end
end

live_loop(:unsyncable)do;sleep 1.0;end
