load_support('piezoelectric_resonator'); use_bpm 127; alive perc: 1
#init true && start_init

#flop_cc on: 127
#solo :cpu
#stop
#alive pitch: 0

# at{
#   sync :Attune
#   sleep 3
#   flop_on :d2
# }
#stop
#}
# at{
#   sync :Attune
#   sleep 6
#   flop_on :g3
# }

# at{
#   sync :Attune
#   sleep 6
#   flop_x :d3
# }

#fx reverb: 0.90, tube: 0.40

#stop


live_loop :Attune, sync: :unsyncable do; tick
  zero_delay [2,5,6].shuffle
  with_bpm 127 do
    flop_cc motion: (flow 0.27 0.5 32).look
    #flip :c3,127, sus: (cycle 0.25 0.5 1).look if spread(7,11).look
    #flip :e3,127, sus: (cycle 0.25 0.5 1).rot(-1).look if spread(3,8).look

    if spread(7,11).look
      flop :d3, (cycle 50 60 70 80 100).look, sus: 1
    end

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0


    if !spread(7,11).look
      flip :g3, 50, sus: 4
    end

    sleep 1/4.0
    sleep 1/4.0

    flip :g3

    sleep 1/4.0
    sleep 1/4.0

    if spread(3,8).look
      flop_cc motion: 0.3
      flop :c4, 100, sus: 2
    else
      flop_cc motion: 0.4
      flop :e3, 60, sus: 1
    end


    sleep 1/2.0
    sleep 1/2.0
    sleep 1/2.0


    flop :c4,127, sus: 1/2.0
    sleep 1/2.0
  end
end

live_loop :ClockCycle, sync: :unsyncable do; tick
  #sync :MachineInstructions
  perc=(cycle 1 0 0 0  0 0 0 1   1 0 0 0  0 0 0 0)
  with_bpm 127*(cycle 1).look do
    perc_machine perc.to_a
  end
end

live_loop :MachineInstructions, sync: :unsyncable do; tick
  with_bpm 127*1 do
    score = (cycle
      [[:G3] 8]
      )
    chd = score.look[0]
    sleeps = score.look[-1]
    resonate chd,1, sus: sleeps, pads: [0], sat: 0, drive: 0
    sleep sleeps
  end
end

live_loop(:unsyncable)do;sleep 1.0;end
