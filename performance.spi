load_support('piezoelectric_resonator'); use_bpm 127; alive perc: 1, pitch: 0
#init true && start_init

#    unity "/lights/up",1.0


# at{
#   sync :Attune
#   sleep 6
#   flop_on :b3
# }
#zoomout
#overclock_cc motion: (cycle 0.27,).look


# live_loop :viz, sync: :Attune do
#   sleep 3
# #  voltage :f4
# end

# at{
#   sync :Attune
#   sleep 1.5
#   flop_x
#   overclock_on :f3

#   slow_init
# }



live_loop :Attune, sync: :unsyncable do; tick
  silence!
  zero_delay [2,5,6].shuffle
  with_bpm 127 do
    flop_cc motion: 0.27#(flow 0.0, 0.58, 32*2,).look
    at{
 #     sleep 0.5
#      create_cube 0.01
      }
    flop :a3, 60, sus: (cycle 0.25, 0.5, 1.0,).look if spread(7,11).look
    flop :e3, 60, sus: (cycle 0.25, 0.5, 1.0,).rot(-1).look if spread(3,8).look

    #flop :d3
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0

    sleep 1/2.0
    sleep 1/2.0
    sleep 1/2.0

#    flop :c4, 60, sus: (cycle 1/2.0,).look if spread(1,1).look

    sleep 1/2.0
  end
end
#create_sea
#cam :chase



#unity "/lights/up",0.0
#unity "/lights/up",0.0


live_loop :ClockCycle, sync: :unsyncable do; tick
  #sync :MachineInstructions
  perc=(cycle 1, 1, 1, 0,   0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 1,)
  with_bpm 127*(cycle 1,).look do
#cam :chase
    perc_machine perc.to_a
  end
end


live_loop :MachineInstructions, sync: :unsyncable do; tick
  with_bpm 127*1 do
    score = (cycle
      [[:A3, :C5, :E4], 8],
      [[:F4, :A6, :C5], 8],
      [[:C3, :E5, :G4], 4],
      [Zz, 4],
      #, [[:A3, :C5, :E4], 8],
      #, [[:E4, :G5, :B3], 8],
      #, [[:F4, :A6, :C5, :E5], 8],
      #, [[:C3, :E5, :G4], 8],
      #, [Zz, 8],

      #, [[:A3, :C5, :E4], 8],
      #, [[:F4, :A6, :C5], 8],
      #, [[:C3, :E5, :G4], 4],
      #, [Zz, 4],
      #, [[:A3, :C5, :E4], 4],
      #, [[:A3, :C5, :E4], 4],
      #, [[:E4, :G5, :B3], 4],
      #, [[:E4, :G5, :B3], 4],
      #, [[:G4, :B6, :D5, :F4], 8],
      #, [[:C4, :E5, :G4], 8],
      #, [Zz, 8],

      )
    chd = score.look[0]
    sleeps = score.look[-1]
    resonate chd+12,1, sus: sleeps, pads: [0], sat: 0, drive: 0
    control_unit root(chd), 10,sus: sleeps, drive: 0.0, sat: 0.0

    sleep sleeps
  end
end
#create_sea
live_loop(:unsyncable)do;sleep 1.0;end
