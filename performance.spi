load_support('piezoelectric_resonator'); use_bpm 127; alive perc: 0, pitch: 0, kick: 0

# world time: 2.5
# overclock_cc attune: 0.55


#stop

#lets bring some error

at{
  sync :Attune
  sleep 4
  #  flop_on :b2
#  overclock_on :f3, 65, motion: 0.55

}


cam :top

#recover
#livecode :sleep
#overclock_cc motion: 0.27
#zoomout

#livecode :begin

#roots_chase target: :spiral, force: 100

live_loop :Attune, sync: :unsyncable do; tick
  silence? #please
  zero_delay [2,5,6].shuffle
  with_bpm @bpm=(127*3) do
    overclock_cc oct: (cycle 0 -12 0 19).look
    #    tick_reset_all
    overclock :f4,10, sus: 3
    flop_cc motion: (flow 0.37 0.57 32).look
    flip_cc motion: 0.4

    flip :g3, 60, sus: (cycle 0.25 0.5 1).look if !spread(7,11).look
    flip :e3, 60, sus: (cycle 0.25 0.5 1).rot(-1).look if spread(7,11).look

#    flop :b3, 60, sus: (cycle 2).look if !spread(7,11).look

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0

 #   flop :g3, 65, sus: (cycle 2).look if spread(7,11).look

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0

    flop :C4, 60, sus: (cycle 1).look if !spread(3,8).look
    flop :e3, 60, sus: (cycle 1).look if spread(3,8).look

    sleep 1/2.0
    sleep 1/2.0
    sleep 1/2.0

    flop :f4, 127, sus: (cycle 1/2.0).look if spread(1,1).look

    sleep 1/2.0
  end
end


live_loop :ClockCycle, sync: :unsyncable do; tick
  #sync :MachineInstructions
  perc=(cycle 1 1 1 1  1 1 1 1  1 )
  with_bpm @bpm=(127*(cycle 1).look) do
    perc_machine perc.to_a
    at{sleep 0.5; sea circle: rand; aura scale: 1.5 * rand}
  end
end

live_loop :MachineInstructions, sync: :unsyncable do; tick
  with_bpm @bpm=(127*1) do
    score = (cycle
      [[:A3 :C5 :E4] 8]
      [[:F4 :A6 :C5] 8]
      [[:C3 :E5 :G4] 4]
      [Zz 4]
      # [[:A3 :C5 :E4] 8]
      # [[:E4 :G5 :B3] 8]
      # [[:F4 :A6 :C5 :E5] 8]
      # [[:C3 :E5 :G4] 8]
      # [Zz 8]

      # [[:A3 :C5 :E4] 8]
      # [[:F4 :A6 :C5] 8]
      # [[:C3 :E5 :G4] 4]
      # [Zz 4]
      # [[:A3 :C5 :E4] 4]
      # [[:A3 :C5 :E4] 4]
      # [[:E4 :G5 :B3] 4]
      # [[:E4 :G5 :B3] 4]
      # [[:G4 :B6 :D5 :F4] 8]
      # [[:C4 :E5 :G4] 8]
      # [Zz 8]

      )
    chd = score.look[0]
    sleeps = score.look[-1]
    resonate chd[0]+12,3, sus: sleeps, pads: [0], sat: 0, drive: 0
    control_unit root(chd), 10,sus: sleeps, drive: 0.20, sat: 0.0

#    at{sleep 0.5; create_sea; sleep 0.5; cam :chase}

    sleep sleeps/2.0

#    with_swing((flow 0.0 sleeps/2.0 64).look){
#      overclock :f4,15, sus: 1/2.0, motion: 0.5
#      resonate :f2,89, sus: sleeps/2.0, pads: [2], sat: 0, drive: 0.60
#    }


    sleep sleeps/2.0
  end
end

live_loop(:unsyncable)do;sleep 1.0;end
