load_support('piezoelectric_resonator'); use_bpm 127; alive perc: 0, pitch: 1
#init true && start_init

#    unity "/lights/up",1.0


at{
  sync :Attune
  sleep 4
  flop_on :b3
}

live_loop :viz, sync: :Attune do
  sleep 3
  voltage :f4
end



live_loop :Attune, sync: :unsyncable do; tick
  zero_delay [2,5,6].shuffle
  with_bpm 127 do
    flop_cc motion: (flow 0.27 0.5 32).look

    flop :a3, 60, sus: (cycle 0.25 0.5 1.0).look if spread(1,1).look

    #flop :d3
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0

    sleep 1/2.0
    sleep 1/2.0
    sleep 1/2.0

    flop :c4, 60, sus: (cycle 1/2.0).look if spread(1,1).look

    sleep 1/2.0
  end
end
#create_sea
#cam :chase



#unity "/lights/up",0.0
#unity "/lights/up",0.0


live_loop :ClockCycle, sync: :unsyncable do; tick
  #sync :MachineInstructions
  perc=(cycle 1 1 1 0   0 0 0 0  0 0 0 0  0 0 0 0)
  with_bpm 127*(cycle 1).look do
    perc_machine perc.to_a
  end
end



live_loop :MachineInstructions, sync: :unsyncable do; tick
  with_bpm 127*1 do
    score = (cycle
      [[:C2] 8]
      )
    chd = score.look[0]
    sleeps = score.look[-1]
    resonate chd+12,1, sus: sleeps, pads: [0], sat: 0, drive: 0

    sleep sleeps
  end
end

live_loop(:unsyncable)do;sleep 1.0;end
