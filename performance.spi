load_support('piezoelectric_resonator'); use_bpm 127; alive perc: 0, pitch: 1, kick: 0
#init true && start_init

#overclock_on :f3

#overclock_x motion: 0.27
at{
  sync :Attune
  sleep 1.5
  flop_on :D2

}


#flop_x :b2


live_loop :Attune, sync: :unsyncable do; tick
  zero_delay [2,5,6].shuffle
  with_bpm @bpm=(127) do
    flop_cc motion: (flow 0.0 0.57 32).look

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0

    flop :e3, 120, sus: (cycle 1.0).look if spread(1,1).look
    flop :e3, 120, sus: (cycle 1.0).look if spread(1,1).look

    sleep 1/2.0
    sleep 1/2.0
    sleep 1/2.0

    flop :c3, 120, sus: (cycle 1/2.0).look if spread(1,1).look

    sleep 1/2.0
  end
end

live_loop :ClockCycle, sync: :unsyncable do; tick
  #sync :MachineInstructions
  perc=(cycle 0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0)
  with_bpm @bpm=(127*(cycle 1).look) do
    perc_machine perc.to_a
  end
end

live_loop :MachineInstructions, sync: :unsyncable do; tick
  with_bpm @bpm=(127*1) do
    score = (cycle
      [[_] 8]
      )
    chd = score.look[0]
    sleeps = score.look[-1]
    sleep sleeps
  end
end

live_loop(:unsyncable)do;sleep 1.0;end
