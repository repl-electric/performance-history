load_support('piezoelectric_resonator'); use_bpm 127
alive perc: 0, sop: 0
#start_init


#flop_x :a3
#flop_cc motion: 0.28


#overclock_cc motion: 0.27

#cam :chase
#slow_init
#zoomout

live_loop :ModularSynthsControlledByCode, sync: :unsyncable do; tick
  zero_delay [2,5,6].shuffle
  with_bpm 127 do
    flip (knit :c3,6, :g3, 1, :f3, 1 ).look,30, sus: (ing 2, 0.5, 0.25,).look
#    flip (knit :g3, 1 ).look,20, sus: (ing 1, 0.25, 0.5,).look*4 if spread(3,9).look

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/2.0

    #linecolor cube: 1.0, s:  rand*1, h: rand*1, b: rand*1, delay: true


    with_transpose -12{
    #ze (ring :G5, :A4, :E4).look, z: 1 if spread(7,11).look
    #ze (knit :G5,4, :A4,4, :E4,4, :G5,4, :A4,4, :c5,4).look, z:1, viz: true if spread(3,8).look
    }

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0

    sleep 1/2.0
    sleep 1/2.0

    if spread(3,9).rot(1).look
      flop :e4
    else
      flop :c4

    end


    sleep 1/2.0
    sleep 1/2.0
    overclock_cc oct: (ing 0, -12, 0, 19,).look

  end
end

live_loop :glitch, sync: :unsyncable do; tick
  #sync :light
  perc=[0, 0, 0, 0,  0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0]
  with_bpm 127*(ing 1,).look do
    perc_machine perc
  end
end

#roots_chase force: 20, freq: 0.2, thick: 0.2, noise: 1,amp: 0.3, drag: 2
live_loop :light, sync: :unsyncable do; tick
  with_bpm 127*1 do
    score = (ing
      [[:A3], 8],
      [[:F3], 8],
      [[:C3], 8],
      REST4,
      )
    chd = score.look[0]
    sleeps = score.look[-1]
    #heat chd,10, sus: sleeps, pads: [0]

    sleep sleeps
  end
end

live_loop(:unsyncable) do;  sleep 1.0;end
