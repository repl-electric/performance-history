load_support('piezoelectric_resonator'); use_bpm 127
alive perc: 1, sop: 0
#init! true
#start_init
#flop_on :d2, 127

at{
  #sync :ModularSynthsControlledByCode
  #sleep 1/4.0
 # overclock_on :e3,120
  #livecode :raise
}
#zoomout

#slow_init
#livecode :sleep
#overclock_cc motion: 0.27


live_loop :ModularSynthsControlledByCode, sync: :unsyncable do; tick
  zero_delay [2,5,6].shuffle
  with_bpm 127 do
    flop_cc motion: (flow 0.27 0.5 12).look
    flip :a3, 127, sus: (vec 1 0.5 2).look
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/2.0

    if spread(3,8).look
      vortex force: (vec 10.2 0).look
    end
 #   alu (vec :g3 :a3 :e3).look, (vec 1,60,127).look, sus: (vec 0.5 0.25 2).look if spread(3,8).look
 #   alu (knit :g3,4, :a3,4,:f3,4,  :g3,4, :a3,4, :c4,4).look,(vec 1,127,1).look,z:1, sus: (vec 3 1 1).look if spread(7,11).look
    #create_cube

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0

    sleep 1/2.0
    sleep 1/2.0

    sleep 1/2.0
    sleep 1/2.0
  end
end

live_loop :glitch, sync: :unsyncable do; tick
  #sync :light
  perc=(vec 1 1 0 0  0 0 0 0  0 0 0 0  0 0 0 0)
  with_bpm 127*(vec 1).look do
    perc_machine perc.to_a
  end
end

#create_sea
#roots_chase force: 20, freq: 0.2, thick: 0.2, noise: 1,amp: 0.3, drag: 2
live_loop :light, sync: :unsyncable do; tick
  with_bpm 127*1 do
    score = (vec
      [[:A3 :C5 :E4] 8]
      [[:F4 :A6 :C5] 8]
      [[:C3 :E5 :G4] 4]
      [Zz 4]
      # [[:A3 :C5 :E4] 8]
      # [[:E4 :G5 :B3] 8]
      # [[:F4 :A6 :C5 :E5] 8]
      # [[:C3 :E5 :G4] 8]
      # [Zz 8]

      # [[:A3 :C5 :E4] 8]
      # [[:F4 :A6 :C5] 8]
      # [[:C3 :E5 :G4] 4]
      # [Zz 4]
      # [[:A3 :C5 :E4] 4]
      # [[:A3 :C5 :E4] 4]
      # [[:E4 :G5 :B3] 4]
      # [[:E4 :G5 :B3] 4]
      # [[:G4 :B6 :D5 :F4] 8]
      # [[:C4 :E5 :G4] 8]
      # [Zz 8]

      )
    chd = score.look[0]
    sleeps = score.look[-1]
    heat chd,1, sus: sleeps, pads: [0], sat: 0, drive: 0

    sleep sleeps/2.0
    with_swing 0.1 {
      operator chd[-1],95, sus: 4
    }

    sleep sleeps/2.0
  end
end

live_loop(:unsyncable) do;  sleep 1.0;end
