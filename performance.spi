load_support('piezoelectric_resonator'); use_bpm 127
alive perc: 1, sop: 0
#init! true
#start_init

at{
  sync :unsyncable
  sleep 0.25
#  overclock_on :E3
#  say :sleep
}

#overclock_cc motion: 0.27
#zoomout
#create_sea
roots_chase force: 100, radius: 0.1
live_loop :ModularSynthsControlledByCode, sync: :unsyncable do; tick
  #cam :chase
  dark :c3
  zero_delay [2,5,6].shuffle
  with_bpm 127 do
    flip :c3,56, sus: (ing 2, 0.5, 0.25,).look if spread(3,2).rot(-1).look
    flip :e3,69, sus: (ing 1, 0.25, 1.5,).look if spread(3,2).rot(0).look

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/2.0

    #ze (ing :g3, :a4, :e4,).look,z:1, sus: 1 if spread(3,7).look
    ze (nit :g4, 4, :a4, 4, :e4, 4,).look,viz:true if spread(7,11).look

    flip :g3,69, sus: (ing 1, 0.25, 1.5,).look

    sleep 1/4.0
    sleep 1/4.0



    sleep 1/4.0
    sleep 1/4.0

    flip :f3,69, sus: (ing 1, 0.25, 1.5,).look if spread(4,6).rot(0).look

    sleep 1/2.0
    sleep 1/2.0

    overclock_cc oct: (ing 0, -12, 0, 19,).look


    if spread(3,9).rot(0).look
      flop_cc motion: 0.4
      flop :e4,80, sus: 1
    else
      flop_cc motion: 0.3
      flop :c4, 40, sus: 1
    end


    sleep 1/2.0
    sleep 1/2.0
  end
end

live_loop :glitch, sync: :unsyncable do; tick
  #sync :light
  perc=[1, 1, 1, 1,  1, 1, 1, 1,   1, 0, 0, 0,   0, 0, 0, 0]
  with_bpm 127*(ing 1,).look do
    perc_machine perc
  end
end

#roots_chase force: 20, freq: 0.2, thick: 0.2, noise: 1,amp: 0.3, drag: 2
live_loop :light, sync: :unsyncable do; tick
  with_bpm 127*1 do
    score = (ing
      [[:A3], 8],
      [[:F3], 8],
      [[:C3], 8],
      REST4,
      )
    chd = score.look[0]
    sleeps = score.look[-1]
    heat chd[0],10, sus: sleeps, pads: [0]
    deep root(chd), 20,sus: sleeps*2, pads: [0]

    sleep sleeps
  end
end

live_loop(:unsyncable) do;  sleep 1.0;end
