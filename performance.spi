load_support('piezoelectric_resonator'); use_bpm 127; alive perc: 0, pitch: 0, kick: 0
#init true && start_init
#cam :top

#livecode :end
#eject_cpu_core

# attune

# #vol 0
# #livecode :end
# #unity "/fadeoutroots",1.0
# unity "/fadeout",0

#eject_cpu_core
#world time: 1
#attune
#unity "/camtop/glitch_h", 0.0


def attune
  unity "/camtop/glitch_h", 0.01
  unity "/camtop/glitch_v", 0.08
  sleep 1
  world time: 1
  unity "/attune/flow", 4.5
  unity "/camtop/zoomin",15.0
  unity "/attune",1
  unity "/camtop/glitch_h", 0.0
  unity "/camtop/glitch_v", 0.0
  $pmode = 4
end



attune


#fadeout_roots
#unity "/fadeoutroots",1.0




#livecode :end
#unity "/attune/flow", 1.0
#vol 0


 # 23.times{
 #   unity "/attune/flow", 1
 #   sleep 1
 # }


#stop

live_loop :Attune, sync: :unsyncable do; tick
  zero_delay [2,5,6].shuffle
  with_bpm 127 do

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0

    sleep 1/2.0
    sleep 1/2.0
    sleep 1/2.0
    sleep 1/2.0
  end
end

live_loop :ClockCycle, sync: :unsyncable do; tick
  #sync :MachineInstructions
  perc=(cycle 0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0)
  with_bpm 127*(cycle 1).look do
    perc_machine perc.to_a
  end
end

live_loop :MachineInstructions, sync: :unsyncable do; tick
  with_bpm 127*1 do
    score = (cycle
      [[_] 8]
      )
    chd = score.look[0]
    sleeps = score.look[-1]
    sleep sleeps
  end
end

live_loop(:unsyncable)do;sleep 1.0;end
