load_support('piezoelectric_resonator'); use_bpm 127
alive perc: 1, sop: 0
#start_init
create_sea
#  say :sleep


#overclock_cc motion: 0.27
#vortex throttle: 0



live_loop :ModularSynthsControlledByCode, sync: :unsyncable do; tick
  zero_delay [2,5,6].shuffle
  with_bpm 127 do

    flip :c3, sus: (ing 2 0.5 0.25).look if spread(2,3).look
    flip :e3, sus: (ing 2 0.5 0.25).look if spread(2,3).rot(-1).look


    sleep 1/4.0
    sleep 1/4.0
    sleep 1/2.0

    ze (ing :g3 :a3 :e3).look,z: 1 if spread(3,7).look
    ze (ing :g3 :a3 :e3).look, cubes: 1 if spread(7,11).look


    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0

    sleep 1/2.0
    sleep 1/2.0

    if spread(3,9).rot(1).look
      flop :c4
    else
      flop :e3

    end


    sleep 1/2.0
    sleep 1/2.0
  end
end

live_loop :glitch, sync: :unsyncable do; tick
  #sync :light
  perc=[0, 0, 0, 0,  0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0]
  with_bpm 127*(ing 1).look do
    perc_machine perc
  end
end

live_loop :light, sync: :unsyncable do; tick
  with_bpm 127*1 do
    score = (ing
      [[:A3 :C5 :E4] 8]
      [[:F4 :A6 :C5] 8]
      [[:C3 :E5 :G4] 4]
      [Zz 4]
      [[:A3 :C5 :E4] 8]
      [[:E4 :G5 :B3] 8]
      [[:F4 :A6 :C5 :E5] 8]
      [[:C3 :E5 :G4] 8]
      [Zz 8]

      [[:A3 :C5 :E4] 8]
      [[:F4 :A6 :C5] 8]
      [[:C3 :E5 :G4] 4]
      [Zz 4]
      [[:A3 :C5 :E4] 4]
      [[:A3 :C5 :E4] 4]
      [[:E4 :G5 :B3] 4]
      [[:E4 :G5 :B3] 4]
      [[:G4 :B6 :D5 :F4] 8]
      [[:C4 :E5 :G4] 8]
      [Zz 8]

      )
    chd = score.look[0]
    sleeps = score.look[-1]
    heat chd[0],10, sus: sleeps, pads: [0]



    sleep sleeps
  end
end

live_loop(:unsyncable) do;  sleep 1.0;end
