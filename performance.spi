load_support('piezoelectric_resonator'); use_bpm 127; alive perc: 1, pitch: 1, kick: 0

#at{
#  sync :Attune
#  sleep 2.5
#  overclock_on :F3, 50, motion: 0.5
#}

#livecode :sleep
#overclock_cc motion: 0.27


#livecode :raise #hehehe

live_loop :Attune, sync: :unsyncable do; tick
  silence? #please
  zero_delay [2,5,6].shuffle
  with_bpm @bpm=(127) do
    #tick_reset_all
    flop_cc motion: (flow 0.27 0.57 32).look

    flip :g4, 100, sus: (cycle 0.25 0.5 1).look if spread(1,1).look
    flop :e4, 110, sus: (cycle 0.25 0.5 1).rot(-1).look if spread(1,1).look

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0

    flop :c4, sus: 2

    sleep 1/2.0
    sleep 1/2.0
    sleep 1/2.0

    flop :e3, 127, sus: (cycle 1/2.0).look if spread(1,1).look

    sleep 1/2.0
  end
end
roots_chase target: :start

live_loop :ClockCycle, sync: :unsyncable do; tick
  #sync :MachineInstructions
  perc=(cycle 1 1 1 1  1 1 1 1  0 0 0 0  0 0 0 1)
  with_bpm @bpm=(127*(cycle 1).look) do
    perc_machine perc.to_a
  end
end

live_loop :MachineInstructions, sync: :unsyncable do; tick
  with_bpm @bpm=(127*1) do
    score = (cycle
      [[:A3 :C5 :E4] 8]
      [[:F4 :A6 :C5] 8]
      [[:C3 :E5 :G4] 4]
      [Zz 4]
      # [[:A3 :C5 :E4] 8]
      # [[:E4 :G5 :B3] 8]
      # [[:F4 :A6 :C5 :E5] 8]
      # [[:C3 :E5 :G4] 8]
      # [Zz 8]

      # [[:A3 :C5 :E4] 8]
      # [[:F4 :A6 :C5] 8]
      # [[:C3 :E5 :G4] 4]
      # [Zz 4]
      # [[:A3 :C5 :E4] 4]
      # [[:A3 :C5 :E4] 4]
      # [[:E4 :G5 :B3] 4]
      # [[:E4 :G5 :B3] 4]
      # [[:G4 :B6 :D5 :F4] 8]
      # [[:C4 :E5 :G4] 8]
      # [Zz 8]
      )
    chd = score.look[0]
    sleeps = score.look[-1]
    resonate chd,1, sus: sleeps, pads: [0], sat: 0, drive: 0

    at{sleep 0.5; create_sea; zoomout; cam :chase}
    control_unit root(chd), 12,sus: sleeps, drive: 0.0, sat: 0.0


    sleep sleeps/2.0
#    with_swing((flow 0.0 sleeps/2.0 64).look){
#      overclock :f4, 20, sus: 1/2.0, motion: rand*0.5
#      resonate chd,120, sus: sleeps, pads: [2], sat: 0, drive: 0.70
#    }

    sleep sleeps/2.0
  end
end

live_loop(:unsyncable)do;sleep 1.0;end
