load_support('piezoelectric_resonator'); use_bpm 127; alive perc: 0, pitch: 1, kick: 0
#overclock_cc sync: 127
#midi_cc 102, 127, channel: 5


#overclock_cc sync: 0
#puts :done


#overclock_on :A2


#midi_cc 102, 127, port: :iac_bus_1, channel: 5

#stop
#init true && start_init
#warm

at{
  sync :Attune
#  sleep 8
#  flop_on :b2, sus: (cycle 1).look if spread(1,1).look
}

live_loop :Attune, sync: :unsyncable do; tick
  zero_delay [2,5,6].shuffle
  with_bpm 127 do
    #tick_reset_all
    flop_cc motion: (flow 0.0 0.57 32).look

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0

    sleep 1/2.0
    sleep 1/2.0
    sleep 1/2.0

    flop :c4, 40, sus: (cycle 1/2.0).look if spread(1,1).look

    sleep 1/2.0
  end
end

live_loop :ClockCycle, sync: :unsyncable do; tick
  #sync :MachineInstructions
  perc=(cycle 0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0)
  with_bpm 127*(cycle 1).look do
    perc_machine perc.to_a
  end
end

live_loop :MachineInstructions, sync: :unsyncable do; tick
  with_bpm @bpm=(127*1) do
    score = (cycle
      [[:F3] 4]
      )
    chd = score.look[0]
    sleeps = score.look[-1]
    resonate chd[0],1, sus: sleeps, pads: [0], sat: 0, drive: 0

    sleep sleeps/2.0
    overclock :a4, 5, sus: 1/8.0, motion: rand*0.5
    with_swing((flow 0.0 sleeps/2.0 64).look){
      resonate :e2,12, sus: sleeps*2, pads: [2], sat: 0, drive: 0.60
    }

    sleep sleeps/2.0

  end
end

live_loop(:unsyncable)do;sleep 1.0;end
