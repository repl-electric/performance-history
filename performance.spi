load_support('piezoelectric_resonator'); use_bpm 127; alive perc: 0, pitch: 1, kick: 0
#explode_cube

#world time: 1.00
overclock_cc attune: 0.3, drive: 0.49

#recover


#stop

 at{
   sync :Attune
#  sleep 3
#  operator :b5,105
#  sleep 3
#  overclock_on :f3
#   flop_on :g3
 }

#ahahahahahg

#livecode :sleep
#overclock_cc motion: 0.27

#cam :top

#flop_x
#roots_chase target: :spiral,  force: 80.0, drag: 1.3

#unity "/camtop/zoomin",1.0

#unity "/camtop/zoomin",12.0

#fx reverb: 1.00, drive: 1.00

#hold
#I'm not sure.....
#eject_cpu_core
attune


live_loop :Attune, sync: :unsyncable do; tick
  silence?
  overclock_cc oct: (cycle 0 12 24 19).look
  overclock :D3,80,sus:4
  zero_delay [2,5,6].shuffle
  with_bpm 127*4 do
    kal :f4
    flop_cc motion: (flow 0.47 0.5 32).look
    flip_cc motion: 0.55
    flip :a4,127, sus: (cycle 0.25 0.5 2).look, drive: 0.34 if spread(7,11).look
    flip :e4,127, sus: (cycle 0.25 0.5 2).rot(-1).look if spread(3,8).look

    if spread(7,11).look
#      flip :g3, sus: 4
    end


    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0


    if !spread(7,11).look
 #     flip :a3, sus: 4
    end


    sleep 1/4.0
    sleep 1/4.0



    sleep 1/4.0
    sleep 1/4.0

    if spread(3,8).look
      flop_cc motion: 0.3
      flop :c4, sus: 2
    else
      flop_cc motion: 0.4
      flop :e3, sus: 1.5
    end

    sleep 1/2.0
    sleep 1/2.0
    sleep 1/2.0

    flop :c4,sus: 1/2.0

    sleep 1/2.0
  end
end

#cam :top

live_loop :ClockCycle, sync: :unsyncable do; tick
  #sync :MachineInstructions
  perc=(cycle 1 1 1 1  1 1 0 0  1 0 0 0  0 0 0 0)
  with_bpm 127*(cycle 1*0.5).look do
    perc_machine perc.to_a
     #   sea circle: 0
    #create_sea
    aura scale: rand*1.2, ping: rand
  end
end

#create_aura
##cam :chase
#zoomout
live_loop :MachineInstructions, sync: :unsyncable do; tick
  with_bpm 127*1 do
    score = (cycle
      [[:A3 :C5 :E4] 8]
      [[:F4 :A6 :C5] 8]
      [[:C3 :E5 :G4] 4]
      [Zz 4]
      [[:A3 :C5 :E4] 8]
      [[:E4 :G5 :B3] 8]
      [[:F4 :A6 :C5 :E5] 8]
      [[:C3 :E5 :G4] 8]
      [Zz 8]

      [[:A3 :C5 :E4] 8]
      [[:F4 :A6 :C5] 8]
      [[:C3 :E5 :G4] 4]
      [Zz 4]
      [[:A3 :C5 :E4] 4]
      [[:A3 :C5 :E4] 4]
      [[:E4 :G5 :B3] 4]
      [[:E4 :G5 :B3] 4]
      [[:G4 :B6 :D5 :F4] 8]
      [[:C4 :E5 :G4] 8]
      [Zz 8]


      )
#    create_sea
    chd = score.look[0]
    sleeps = score.look[-1]
    resonate chd,1, sus: sleeps, pads: [0], sat: 0, drive: 0
    sleep sleeps/2.0
    operator chd[-1], sus: 12

    control_unit root(chd), 10,sus: sleeps, drive: 1.00, sat: 1.00



    with_swing((flow 0.0 sleeps/4.0 32).look){
#      voltage :f4
      operator chd[-2]+12+12, sus: 12
    }

    sleep sleeps/2.0
  end
end

live_loop(:unsyncable)do;sleep 1.0;end
