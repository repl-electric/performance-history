load_support('piezoelectric_resonator'); use_bpm 127


def ping_cc(cc)
  cc.keys.each do |k|
    n = case k
        when :delay; 100
        else
          nil
        end
    if n
      midi_cc n, cc[k]*127.0, port: :iac_bus_1, channel: 1
    end
  end
end


#ping_cc delay: 0.2



def ping(n,*args)
   if n
     velocity = 100
     if args && args[0].is_a?(Numeric)
       velocity = args[0]
     end
     args_h = resolve_synth_opts_hash_or_array(args)
     midi n, velocity, *(args << {port: :iac_bus_1} << {channel: 1})
     nname = SonicPi::Note.new(n).midi_string
     puts "Ping: [#{nname}]"
     ping_cc args_h
   end
 end



#stop

 def pong(n,*args)
   if n
     velocity = 100
     if args && args[0].is_a?(Numeric)
       velocity = args[0]
     end
     args_h = resolve_synth_opts_hash_or_array(args)
     midi n, velocity, *(args << {port: :iac_bus_1} << {channel: 2})
     nname = SonicPi::Note.new(n).midi_string
     puts "Pong: [#{nname}]"
   end
 end


live_loop :demo do
   tick

   ping :a2
   sleep 2.0
 #  pong :c3
   sleep 2.0
 end
