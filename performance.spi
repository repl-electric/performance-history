load_support('piezoelectric_resonator'); use_bpm 127
alive perc: 1, sop: 1

roots_chase target: :tree, drag: 4, force: 70, amp: 0.1, freq: 0.2, throttle: 0.4
sea circle: 0

#at{
#  sync :unsyncable
  #GULP HERE GOES
#  sleep 0.125
#  overclock_on :E3
#}

#overclock_cc motion: 0.27
#slow_init
#cam :chase
#create_tree -2
live_loop :ModularSynthsControlledByCode, sync: :unsyncable do; tick
  zero_delay [2,5,6].shuffle
  with_bpm 127 do
    #kal :F4

    flip :c3, 60, sus: (ing 2 0.5 0.25).look if spread(2,3).rot(1).look
    flip :e3, 80, sus: (ing 2 0.5 1.0).look if spread(2,3).rot(-1).look

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/2.0

    ze (ing :G3 :A4 :E4).look, sus: 2, z: 1 if spread(7,11).look
    ze (nit :G3 4  :A4 4 :E4 4 :G3 4  :A4 4 :C5 4).look if spread(3,8).look

    sleep 1/4.0
    sleep 1/4.0

    fn = [method(:flop), method(:flop)].choose
    fn.(:g3,[50, 70].choose, sus: 2)

    sleep 1/4.0
    sleep 1/4.0

    flip :f3,[100, 70].choose, sus: 2

    sleep 1/2.0
    sleep 1/2.0
    #zoomout
    if spread(3,9).rot(0).look
      flop_cc motion: 0.3
      flop :c4,100, sus: 2

    else
      flop_cc motion: 0.4
      rocks orbit: rand*100
      bitsea :f3, 120
      flop :e4,70, sus: 2
    end


    sleep 1/2.0
    flip :c4, 100
    sleep 1/2.0
  end
end


live_loop :glitch, sync: :unsyncable do; tick
  #sync :light
  perc=[1, 1, 1, 1,  0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0]
  with_bpm 127*(ing 0.5 1).look do
    dark :c3, 100
    perc_machine perc
  end
end


live_loop :light, sync: :unsyncable do; tick
  roots_chase force: 20, freq: 0.2, thick: 0.2, noise: 1,amp: 0.3, drag: 2
  with_bpm 127*1 do
    score = (ing
      [[:A3 :C5 :E4] 8]
      [[:F4 :A6 :C5] 8]
      [[:C3 :E5 :G4] 4]
      [Zz 4]
      [[:A3 :C5 :E4] 8]
      [[:E4 :G5 :B3] 8]
      [[:F4 :A6 :C5 :E5] 8]
      [[:C3 :E5 :G4] 8]
      [Zz 8]

      [[:A3 :C5 :E4] 8]
      [[:F4 :A6 :C5] 8]
      [[:C3 :E5 :G4] 4]
      [Zz 4]
      [[:A3 :C5 :E4] 4]
      [[:A3 :C5 :E4] 4]
      [[:E4 :G5 :B3] 4]
      [[:E4 :G5 :B3] 4]
      [[:G4 :B6 :D5 :F4] 8]
      [[:C4 :E5 :G4] 8]
      [Zz 8]

      )
    chd = score.look[0]
    sleeps = score.look[-1]
    heat chd,20, sus: sleeps, pads: [0,1,2,3]
    deep root(chd), 127,sus: sleeps*2, pads: [0], drive: 0.2, sat: 0.2

    sleep sleeps
  end
end

live_loop(:unsyncable) do;  sleep 1.0;end
