load_support('piezoelectric_resonator'); use_bpm 127
alive perc: 1, sop: 1
#init! true
#start_init

#cam# :top

fx drive: 1.00, reverb: 1.00

# at{
#   sync :unsyncable
#   sleep 0.25
# #  overclock_on :E3
# #  say :sleep
# }

#overclock_cc motion: 0.27
#zoomout
#create_sea

live_loop :ModularSynthsControlledByCode, sync: :unsyncable do; tick
  #cam :chase
  #dark :c3
#  zero_delay [2,5,6].shuffle
  with_bpm 127 do
   # flip :c3,56, sus: (ing 2, 0.5, 0.25,).look if spread(3,2).rot(-1).look
  #  flip :e3,69, sus: (ing 1, 0.25, 1.5,).look if spread(3,2).rot(0).look

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/2.0

    #ze (ing :g3, :a4, :e4,).look,z:1, sus: 1 if spread(3,7).look
  #  ze (nit :g4, 4, :a4, 4, :e4, 4,).look,viz:true if spread(7,11).look


    sleep 1/4.0
    sleep 1/4.0

    #flop :g3,40, sus: 4


    sleep 1/4.0
    sleep 1/4.0

    #flip :f3,69, sus: (ing 1, 0.25, 1.5,).look if spread(4,6).rot(0).look

    sleep 1/2.0
    sleep 1/2.0

    overclock_cc oct: (ing 0, -12, 0, 19,).look


    if spread(3,9).rot(0).look
      flop_cc motion: 0.3
      flop :c4,80, sus: 1
    else

      flop_cc motion: 0.4
#      sop :f4,127
      flop :e3, 40, sus: 1
    end

    sleep 1/2.0
    flip :c4, 100
    sleep 1/2.0
  end
end

live_loop :glitch, sync: :unsyncable do; tick
  #sync :light
  perc=[1, 1, 1, 1,  1, 1, 1, 1,   1, 0, 0, 0,   0, 0, 0, 0]
  with_bpm 127*(ing 0.5,).look do
    perc_machine perc
  end
end

#roots_chase force: 20, freq: 0.2, thick: 0.2, noise: 1,amp: 0.3, drag: 2
live_loop :light, sync: :unsyncable do; tick
  with_bpm 127*1 do
    score = (ing
      [[:A3, :C5, :E4], 8],
      [[:F4, :A6, :C5], 8],
      [[:C3, :E5, :G4], 4],
      [Zz, 4],
      [[:A3, :C5, :E4], 8],
      [[:E4, :G5, :B3], 8],
      [[:F4, :A6, :C5, :E5], 8],
      [[:C3, :E5, :G4], 8],
      [Zz, 8],

      [[:A3, :C5, :E4], 8],
      [[:F4, :A6, :C5], 8],
      [[:C3, :E5, :G4], 4],
      [Zz, 4],
      [[:A3, :C5, :E4], 4],
      [[:A3, :C5, :E4], 4],
      [[:E4, :G5, :B3], 4],
      [[:E4, :G5, :B3], 4],
      [[:G4, :B6, :D5, :F4], 8],
      [[:C4, :E5, :G4], 8],
      [Zz, 8],

      )
    chd = score.look[0]
    roots_chase drag: 1
    sleeps = score.look[-1]
    heat chd[0],120, sus: sleeps, pads: [0,1,2]
    deep root(chd), 120, sus: sleeps*2, sat: 1, drive: 1

    sleep sleeps
  end
end

live_loop(:unsyncable) do;  sleep 1.0;end
