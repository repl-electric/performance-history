load_support('piezoelectric_resonator'); use_bpm 127
alive perc: 1, sop: 0
#start_init
create_sea
at{
  # sync :unsyncable
  # sleep 0.25
  # overclock_on :F3
#  say :sleep
}

#overclock_cc motion: 0.27



live_loop :ModularSynthsControlledByCode, sync: :unsyncable do; tick
  zero_delay [2,5,6].shuffle
  with_bpm 127 do

    flip :c3, sus: (ing 2 0.5 0.25).look
    flip :e3, sus: (ing 1 0.25 1.5).look


    sleep 1/4.0
    sleep 1/4.0
    sleep 1/2.0

    #linecolor cube: 1.0, s: rand*6, h: rand*6, b: rand*6, delay: true

    ze (ring :g3, :a3, :e3).look,z:1, sus: 4 if spread(3,7).look
    ze (knit :g3,4, :a3,4, :e3,4,  :g3,4, :a3,4, :c4,4).look,z:1 if spread(7,11).look

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0

    sleep 1/2.0
    sleep 1/2.0

    if spread(3,9).rot(1).look
      flop :e4

    else

    end



    sleep 1/2.0
    sleep 1/2.0
  end
end

live_loop :glitch, sync: :unsyncable do; tick
  #sync :light
  perc=[1, 1, 1, 1,  0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0]
  with_bpm 127*(ing 1).look do
    perc_machine perc
  end
end

#roots_chase force: 20, freq: 0.2, thick: 0.2, noise: 1,amp: 0.3, drag: 2
live_loop :light, sync: :unsyncable do; tick
  with_bpm 127*1 do
    score = (ing
      [[:A3] 8]
      [[:F3] 8]
      [[:C3] 8]
      REST4
      )
    chd = score.look[0]
    sleeps = score.look[-1]
    heat chd,10, sus: sleeps, pads: [0]
    deep chd, 10,sus: sleeps*2

    sleep sleeps
  end
end

live_loop(:unsyncable) do;  sleep 1.0;end
