load_support('piezoelectric_resonator'); use_bpm 127
live_loop(:unsyncable) do;  sleep 1.0;end
alive sop: 0, perc: 1, kick: 0

#roots_chase freq: 200
#scene 1
#create_cube

#overclock_cc motion: 0.40

#overclock_on :E3
#zoomout
#world time: 1
#zoomout
#stop
#zoomout

roots_chase thick: 0.1, freq: 0.01, target: :cube, drag: 1
stop

live_loop :wind, sync: :unsyncable do; tick
  s=(knit :A4, 128, _, 127, :A5,1).look
#  ze s, (line 127,50,256*4).look, sus: (knit 1/4.0,32,1/2.0,31, 1, 1).look if spread(7*1,11*1).look
  if spread(7*1,11*8).look
    ze (ing :A4, :F3,).look, sus: 0.25, y: 1
    if spread(7*1,11*8*8).look
      ze (ing :A4,).look, z: 1
      #ze :C3, sus: 0.2
      #bitsea :A4, (line 127,100,256).look, sus: 2, hi: 0.85
    else
      ze :C4
    end
  else
    ze :D4
  end
  #qbitsea :A5
  #qbitsea :G3, ((line 20,40,128)+(line 40,20,128)).look, sus: (ing 1/4.0, 1/2.0, 1/4.0,).look if spread(3*4,8*4).look
  #qbitsea :E3, 50, sus: (ing 1/2.0, 1, 1,).look if spread(1*4,8*4).look
  sleep 1/8.0
end

#roots chase: 1, target: :spiral, throttle: 1


live_loop :ModularSynthsControlledByCode, sync: :unsyncable do; tick
  #sync :light
  zero_delay [2,5,6].shuffle
  with_bpm 127*[1.0,1.0].choose do
    #kal :E3, (line 5, 30, 32).look#, sus: 6 if spread(1,12).look



    flop :C3


    sleep 1/4.0
    sleep 1/4.0
    sleep 1/2.0

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0

    sleep 1/2.0
    sleep 1/2.0

    @t||= :none
    if spread(3,8).look
      @t= [:cube, :spiral].choose
      roots chase: 1, target: @t
      #roots_chase radius: rand
      flop_cc motion: 0.3
      flop :c4, 110-rand*15, sus: 2.0
    else
      roots chase: 1, target: @t
      #roots_chase freq: rand*100.0
      flop_cc motion: 0.4
      #bitsea :d5, 127, sus: 1
      flop :e3, 60-rand*10, sus: 1.0
    end

    sleep 1/2.0
    sleep 1/2.0
  end
end
#zoomout


live_loop :glitch, sync: :unsyncable do; tick
  sync :light
  with_bpm 127*[2.0,2.0].choose do
    if spread(4,8).look
      glitch_cc mode: (ing 0, 2, 3, 5,).look
    end
    if spread(8,8).look
      dark :e3, 122
      if spread(3,8).look
        at{
          sleep 0.5
          dark :e3, 110
        }
      end
    end
    glitch_cc corode: 1.0
    glitch :c3, (ing 65, 60, 60, 60,).look
    at{
      sleep 0.25
      glitch :c3, 2.1*(ing 120, 90, 100, 100,    100, 90, 90, 90,).look
    }
    glitch_cc corode: 0.2

    if spread(7,11).look
      if spread(1,4).look
        #glitch :ds3,2# if spread(1,4).look
        sleep 1/4.0
      else
        sleep 1/4.0
        #glitch :as3,1# if spread(1,4).look
        sleep 1/4.0
        #glitch :as3,5# if spread(1,4).look
      end
      sleep 1/2.0
    else
      #glitch :gs3,3# if spread(1,4).look

      sleep 1/2.0
      #glitch :ds3, 127# if spread(1,4).look
      sleep 1/2.0

      #glitch :fs3,20# if spread(1,4).look

      at{
        sleep 1/2.0
        #glitch :g3, 50# if spread(1,4).look
        }
    end

    glitch_cc corode: (ine 0.2, 0.7, 128,).look
    glitch (ing :c3, :a3,).look, 30 if spread(7,11).look

    sleep 1/4.0
    glitch :fs3, 40
    sleep 1/4.0

    sleep 1/4.0
    glitch :ds3, 127
    sleep 1/4.0

    with_swing 0.1 {#((knit -0.1/2.0, 4, 0.1,4).look) {
      glitch :gs3, 40
    }

    sleep 1/2.0
    #glitch :gs3, 80 if spread(1,8).look
    sleep 1/2.0
    #glitch :gs3, 90 if spread(1,8).look

    #dark :cs3, 20

    sleep 1/2.0
    glitch (ing :cs4, :cs4, :cs4, :d4,).look,127
    sleep 1/2.0
  end
end

live_loop :light, sync: :unsyncable do; tick
  with_bpm 127*1.0 do
    score = (ing
      [[:A3, :C5, :E4], 8],
      [[:F4, :A6, :C5], 8],
      [[:C3, :E5, :G4], 8],
      REST4,
      )
    #roots throttle: 0.0, freq: 0.2, drag: 2.0, target: :cube, chase: 1, target: :cube
    #roots chase: 1, target: (knit :cube,4, :spiral,4).look
    chd = score.look[0]
    sleeps = score.look[-1]
    deep root(chd), 1, sus: 2
    sleep sleeps
  end
end

#lovely
#roots throttle:1.0, freq: 1054, drag: 10
#stop
#roots swirl: 1, throttle: 0, alive: 1
