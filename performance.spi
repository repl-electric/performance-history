load_support('piezoelectric_resonator'); use_bpm 127
alive perc: 0, sop: 0

#start_init

#say :sleep
overclock_cc motion: 0.27

#create_sea
#cam :chase



live_loop :ModularSynthsControlledByCode, sync: :unsyncable do; tick
  zero_delay [2,5,6].shuffle
  with_bpm 127 do
    roots_chase freq: rand*2
    flip :c3,60, sus: (ing 2 0.5 0.125).look if spread(2,3).look
    flip :e3,60, sus: (ing 0.5 2 1.125).look if spread(3,9).rot(-1).look

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/2.0
    ze (ing :g3 :a3 :e3).look if spread(7,11).look
    ze (knit :g4, 4).look, z: 1 if spread(3,7).look


    sleep 1/4.0
    sleep 1/4.0

    flop :f4, sus: 2

    sleep 1/4.0
    sleep 1/4.0

    flip :f3

    sleep 1/2.0
    sleep 1/2.0

    if spread(3,8).rot(0).look
      flop_cc motion: 0.3
      flop :c4, 100, sus: 2
    else
      flop_cc motion: 0.4
      flop :e3,55, sus: 1
    end

    sleep 1/2.0
    flip :c4
    sleep 1/2.0
  end
end

live_loop :glitch, sync: :unsyncable do; tick
  #sync :light
  perc=[0, 0, 0, 0,  0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0]
  with_bpm 127*(ing 1).look do
    perc_machine perc
  end
end

#roots_chase force: 20, freq: 0.2, thick: 0.2, noise: 1,amp: 0.3, drag: 2
live_loop :light, sync: :unsyncable do; tick
  with_bpm 127*1 do
    score = (ing
      [[:A3 :C5 :E4] 8]
      [[:F4 :A6 :C5] 8]
      [[:C3 :E5 :G4] 4]
      [Zz 4]
      [[:A3 :C5 :E4] 8]
      [[:E4 :G5 :B3] 8]
      [[:F4 :A6 :C5 :E5] 8]
      [[:C3 :E5 :G4] 8]
      [Zz 8]

      [[:A3 :C5 :E4] 8]
      [[:F4 :A6 :C5] 8]
      [[:C3 :E5 :G4] 4]
      [Zz 4]
      [[:A3 :C5 :E4] 4]
      [[:A3 :C5 :E4] 4]
      [[:E4 :G5 :B3] 4]
      [[:E4 :G5 :B3] 4]
      [[:G4 :B6 :D5 :F4] 8]
      [[:C4 :E5 :G4] 8]
      [Zz 8]

      )
    chd = score.look[0]
    sleeps = score.look[-1]
    heat chd[0],10, sus: sleeps, pads: [0]
    deep root(chd), 10,sus: sleeps*2, pads: [0]

    sleep sleeps
  end
end

live_loop(:unsyncable) do;  sleep 1.0;end
