load_support('piezoelectric_resonator'); use_bpm 127
alive perc: 0, sop: 0

##start_init

at{
#  sync :unsyncable
#  sleep 0.25
#  overclock_on :f3
#say :sleep
}

overclock_cc motion: 0.27
#zoomout

#slow_init
cam :chase


live_loop :ModularSynthsControlledByCode, sync: :unsyncable do; tick
  zero_delay [2,5,6].shuffle
  with_bpm 127 do

    flip :c3, sus: (ing 4, 0.25, 0.5,).look


    sleep 1/4.0
    sleep 1/4.0
    sleep 1/2.0

    ze (ing :g3, :a3, :e3,).look, z: 1 if spread(3,8).look
    ze (nit :g3, 4, :a3, 4, :e3, 4,).look if spread(7,11).look


    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0

    sleep 1/2.0
    sleep 1/2.0

    if spread(3,9).rot(0).look
      flop :c4,100, sus: 2
    else
      flop :e3,50, sus: 1
    end


    sleep 1/2.0
    sleep 1/2.0
  end
end

live_loop :glitch, sync: :unsyncable do; tick
  #sync :light
  perc=[0, 0, 0, 0,  0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0]
  with_bpm 127*(ing 1,).look do
    perc_machine perc
  end
end

#create_cube

#roots_chase force: 20, freq: 0.2, thick: 0.2, noise: 1,amp: 0.3, drag: 2
live_loop :light, sync: :unsyncable do; tick
  with_bpm 127*1 do
    score = (ing
      [[:a3], 8],
      [[:f3], 8],
      [[:c3], 8],
      REST4,
      )
    chd = score.look[0]
    sleeps = score.look[-1]
    heat chd[0],10, sus: sleeps, pads: [0]
    sleep sleeps
  end
end

live_loop(:unsyncable) do;  sleep 1.0;end
