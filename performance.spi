load_support('piezoelectric_resonator'); use_bpm 127; alive perc: 1, pitch: 1, kick: 0
#init true && start_init

at{
  sync :Attune
  sleep 3
#  flop_on :A3
}

live_loop :Attune, sync: :unsyncable do; tick
  zero_delay [2,5,6].shuffle
  with_bpm 127 do
    flop_cc motion: (flow 0.0, 0.57, 32,).look

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0

    sleep 1/2.0
    sleep 1/2.0
    sleep 1/2.0

    flop :C4

    sleep 1/2.0
  end
end

live_loop :ClockCycle, sync: :unsyncable do; tick
  #sync :MachineInstructions
  perc=(cycle 1, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,)
  with_bpm 127*(cycle 1,).look do
    #    perc_machine perc.to_a
    with_swing((flow 0.0, 2.0, 64,).look){
      if spread(4,8).look
        glitch :c3
      end
    }

    sleep 1/4.0
  end
end

live_loop :MachineInstructions, sync: :unsyncable do; tick
  with_bpm @bpm=(127*1) do
    score = (cycle
      [[:f2], 8],
      )
    chd = score.look[0]
    sleeps = score.look[-1]
    resonate chd[0]+12,1, sus: sleeps, pads: [0], sat: 0, drive: 0

    sleep sleeps/2.0
    with_swing((flow 0.0, sleeps/2.0, 64,).look){
      resonate chd[0],110, sus: sleeps/2.0, pads: [2], sat: 0, drive: 0
    }
    sleep sleeps/2.0
  end
end

live_loop(:unsyncable)do;sleep 1.0;end
