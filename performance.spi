load_support('piezoelectric_resonator'); use_bpm 127; alive perc: 1, pitch: 1
#init true && start_init

# at{
#   sync :Attune
#   sleep 6
#   flop_on :b3
# }

live_loop :Attune, sync: :unsyncable do; tick
  zero_delay [2,5,6].shuffle
  with_bpm 127 do
    flop_cc motion: x=(flow 0.0 0.57 32).look

    flop :a3, sus: (cycle 0.25 0.5 1).look
    flop :e3, sus: (cycle 0.25 0.5 1).rot(-1).look

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0

    sleep 1/2.0
    sleep 1/2.0
    sleep 1/2.0

    glitch_cc mode: (cycle 1 2 3 4 5 6 7).choose

    flop :c4, sus: 1/2.0

    sleep 1/2.0
  end
end

live_loop :ClockCycle, sync: :unsyncable do; tick
  #sync :MachineInstructions
  perc=(cycle 1 0 0 0  1 0 0 0  1 0 0 0  0 0 0 0)
  with_bpm 127*(cycle 1).look do
    perc_machine perc.to_a
  end
end

live_loop :MachineInstructions, sync: :unsyncable do; tick
  with_bpm 127*1 do
    score = (cycle
      [[:B2 :d4 :f3] 8]
      )
    chd = score.look[0]
    sleeps = score.look[-1]
    resonate chd,4, sus: sleeps, pads: [0], sat: 0, drive: 0

    sleep sleeps/2.0
    #operator chd[-1]+12,100, sus: 12

    with_swing((flow 0.0 sleeps/4.0 32).look) {
      voltage :f4
      operator chd[-2]+12,100, sus: 12
    }

    sleep sleeps/2.0
  end
end

live_loop(:unsyncable)do;sleep 1.0;end
