load_support('piezoelectric_resonator'); use_bpm 127
alive perc: 1, sop: 0
#init! true
#start_init
#flop_on :d2, 127

live_loop :ModularSynthsControlledByCode, sync: :unsyncable do; tick
  zero_delay [2,5,6].shuffle
  with_bpm 127 do
    flop_cc motion: (flow 0.27 0.5 12).look
    flop :a3,127, sus: 3.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/2.0

    alu (vec :g3 :a3 :e3).look, (vec 1,60,127).look, sus: (vec 0.5 0.25 2).look if spread(3,8).look
    alu (knit :g3,4, :a3,4,:f3,4,  :g3,4, :a3,4, :c4,4).look, (vec 1,60,127).look, sus: (vec 2 1 1).look if spread(7,11).look
    #create_cube

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0

    sleep 1/2.0
    sleep 1/2.0

    sleep 1/2.0
    sleep 1/2.0
  end
end

live_loop :glitch, sync: :unsyncable do; tick
  #sync :light
  perc=(vec 0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0)
  with_bpm 127*(vec 1).look do
    perc_machine perc.to_a
  end
end


#roots_chase force: 20, freq: 0.2, thick: 0.2, noise: 1,amp: 0.3, drag: 2
live_loop :light, sync: :unsyncable do; tick
  with_bpm 127*1 do
    score = (vec
      [[:a3] 8]
      [[:e3] 4]

      )
    chd = score.look[0]
    sleeps = score.look[-1]
    heat chd,1, sus: sleeps, pads: [0], sat: 0, drive: 0

    sleep sleeps
  end
end

live_loop(:unsyncable) do;  sleep 1.0;end
