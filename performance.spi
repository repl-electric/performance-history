load_support('piezoelectric_resonator'); use_bpm 127; alive perc: 0, pitch: 1, kick: 0
#Repl Electric: http://www.repl-electric.com

at{
  sync :Attune
  sleep 8
#  flop_on :a3
}


live_loop :Attune, sync: :unsyncable do; tick
  zero_delay [2,5,6].shuffle
  with_bpm @bpm=(127) do
    #tick_reset_all
    flop_cc motion: (flow 0.0, 0.57, 32,).look

    flop :A3, 60, sus: (cycle 0.25, 0.5, 1,).look if spread(1,1).look
    flop :E3, 60, sus: (cycle 0.25, 0.5, 1,).rot(-1).look if spread(1,1).look

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0

    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0
    sleep 1/4.0

    flop :e3, sus: 1.0

    sleep 1/2.0
    sleep 1/2.0
    sleep 1/2.0

    flop :c4, sus: 1/2.0

    sleep 1/2.0
  end
end

live_loop :ClockCycle, sync: :unsyncable do; tick
  #sync :MachineInstructions
  perc=(cycle 0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,)
  with_bpm @bpm=(127*(cycle 1,).look) do
    perc_machine perc.to_a
  end
end

live_loop :MachineInstructions, sync: :unsyncable do; tick
  with_bpm @bpm=(127*1) do
    score = (cycle
      [[:D2], 8],
      )
    chd = score.look[0]
    sleeps = score.look[-1]
    resonate chd,1, sus: sleeps, pads: [0], sat: 0, drive: 0

    sleep sleeps/2.0

    with_swing((flow 0.0, sleeps/2.0, 64,).look){
      overclock :c3,50, sus: 1/2.0, motion: rand
      resonate :f2,127, sus: sleeps, pads: [2], sat: 0, drive: 0.55
    }

    sleep sleeps/2.0
  end
end

live_loop(:unsyncable)do;sleep 1.0;end
